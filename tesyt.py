import streamlit as st
from PIL import Image
from datetime import date, timedelta
import time
import streamlit.components.v1 as components
import json
from random import randint
import os
import joblib
import pandas as pd
import numpy as np



st.set_page_config(
page_title="–ü–†–û–ï–ö–¢ 19",
page_icon="üöô",
layout="wide",
initial_sidebar_state="collapsed", #expanded/collapsed
menu_items={
         'Get Help': 'https://www.google.com/',
         'Report a bug': "https://www.google.com/",
         'About': "# –í—Å–µ–º –ø—Ä–æ–µ–∫—Ç–∞–º - –ø—Ä–æ–µ–∫—Ç! –°–¥–µ–ª–∞–µ–º *–¥–≤–∏–∂–µ–Ω–∏–µ* –±–µ–∑–æ–ø–∞—Å–Ω—ã–º!"
     })

#–º–µ–Ω—é
menu = st.sidebar.selectbox(
     '–ú–µ–Ω—é',
     ('–°—Ç–∞—Ä—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞','–ü—Ä–æ–≥–Ω–æ–∑','–ö–æ–º–∞–Ω–¥–∞','–°—Ç–∞—Ç—å—è'))


#–¢–∞–±–ª–∏—Ü–∞ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤
today=date.today()
today_p1=date.today() + timedelta(days=1)
today_p2=date.today() + timedelta(days=2)
today_p3=date.today() + timedelta(days=3)
today_p4=date.today() + timedelta(days=4)
today_p5=date.today() + timedelta(days=5)
today_p6=date.today() + timedelta(days=6)
today_p7=date.today() + timedelta(days=7)
today_p8=date.today() + timedelta(days=8)
today_p9=date.today() + timedelta(days=9)

#–ú–æ–¥–µ–ª—å
model_tree_class=joblib.load(r'classification_model.pkl')
model_reg=joblib.load(r'reg_model.pkl')
data_score = pd.read_excel("score_example.xlsx")
#data_score[['month','temperature','atmospheric_pressure','humidity','Wind_speed','wind_–í','region_–°–µ–≤–µ—Ä–æ-–∑–∞–ø–∞–¥', 'hour','snow','rain']]
Y=model_tree_class.predict(data_score)
Y2=np.around(model_reg.predict(data_score), decimals=0)
X=[]
X2=[]
for count in range (0,6):
    if Y[count]==1:
        if Y2[count]+3>6:
            Y2[count]=Y2[count]- randint(0,3)
            X.append(Y2[count])
        else:
            Y2[count]=Y2[count]+ randint(0,3)
            X.append(Y2[count])
    else:
        X.append(0)
    if Y[count]==1:
        if Y2[count]+3>6:
            Y2[count]=Y2[count]- randint(0,3)
            X2.append(Y2[count])
        else:
            Y2[count]=Y2[count]+ randint(0,3)
            X2.append(Y2[count])
    else:
        X2.append(0)

if menu=='–°—Ç–∞—Ä—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞':
    """
    # –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –ø—Ä–æ–µ–∫—Ç!

    –≠—Ç–æ –ª—É—á—à–∏–π –ø—Ä–æ–µ–∫—Ç –≤ –∏—Å—Ç–æ—Ä–∏–∏ —á–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤–∞!
    """
    HtmlFile = open("Hello.html", 'r', encoding='utf-8')
    source_code = HtmlFile.read()
    components.html(source_code, width=1250, height=600, scrolling=False)

code='''from itertools import count
from unittest import result
import requests
from bs4 import BeautifulSoup as bs
import json
import datetime
import os
import re

url = 'https://www.gismeteo.ru/weather-moscow-4368/'
url_prognos_10days = 'https://www.gismeteo.ru/weather-moscow-4368/10-days/'


def pogoda_msk_today():
    response = requests.get(url, headers={
        "User-Agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36"})
    soup = bs(response.text, 'lxml')

    data_temperature = []
    temperature = soup.find_all('span', class_='unit unit_temperature_c')
    count = 0
    for i in temperature:
        count += 1
        if count >= 7:
            data_temperature.append(i.text)

    data_precipitation_mm = []
    precipitation = soup.find_all('div', class_='row-item')
    count5 = 0
    for q in precipitation:
        count5 += 1
        if count5 in range(25, 33):
            data_precipitation_mm.append(q.text)

    data_precipitation = []
    countA = 1
    while countA in range(1, 9):
        weather = soup.select_one(
            f'body > section.content.wrap > div.content-column.column1 > section:nth-child(3) > div > div > div > div > div.widget-row.widget-row-icon > div:nth-child({countA}) > div')[
            'data-text']
        data_precipitation.append(weather)
        countA += 1

    data_wind = []
    wind = soup.find_all('div', class_='row-item')
    count1 = 0
    for k in wind:
        count1 += 1
        if count1 in range(49, 57):
            data_wind.append(k.text)

    data_wind_speed = []
    wind_speed = soup.find_all('span', class_='wind-unit unit unit_wind_m_s')
    count2 = 0
    for m in wind_speed:
        count2 += 1
        if count2 in range(9, 17):
            data_wind_speed.append(m.text)

    data_atmo_pressure = []
    atmospheric_pressure = soup.find_all('span', class_='unit unit_pressure_mm_hg_atm')
    count2 = 0
    for m in atmospheric_pressure:
        count2 += 1
        if count2 > 1:
            data_atmo_pressure.append(m.text)

    data_humidity = []
    humidity = soup.find('div', class_='widget-row widget-row-humidity').text
    b = re.findall(r'\d\d', humidity)
    for tt in b:
        data_humidity.append(tt)

    data_msk = {'temperature': data_temperature, 'precipitation_mm': data_precipitation_mm,
                'precipitation': data_precipitation, 'wind': data_wind, 'wind_speed': data_wind_speed,
                'atmospheric_pressure': data_atmo_pressure, 'humidity': data_humidity}
    with open('data_pogoda', 'w', encoding='utf-8') as f:
        f.write(json.dumps(data_msk, ensure_ascii=False, indent=4))


def prognos():
    response = requests.get(url_prognos_10days, headers={
        "User-Agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36"})
    soup = bs(response.text, 'lxml')

    data_temperature_10days = []
    temperature = soup.find_all('span', class_='unit unit_temperature_c')
    count = 0
    a = 0
    for i in temperature:
        count += 1
        if count in range(21, 31):
            future_date = datetime.date.today() + datetime.timedelta(days=a)
            data_temperature_10days.append(i.text)
            # print(future_date, '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ :', i.text)
            a += 1

    data_wind_10days = []
    wind = soup.find_all('div', class_='direction')
    count = 0
    a = 0
    for l in wind:
        future_date = datetime.date.today() + datetime.timedelta(days=a)
        data_wind_10days.append(l.text)
        # print(future_date, '–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞ :', l.text)
        a += 1

    data_wind_speed_10days = []
    wind_speed = soup.find_all('span', class_='wind-unit unit unit_wind_m_s')
    count2 = 0
    for m in wind_speed:
        count2 += 1
        if count2 in range(11, 21):
            data_wind_speed_10days.append(m.text)

    data_atmospheric_pressure_10days = []
    atmospheric_pressure = soup.find_all('span', class_='unit unit_pressure_mm_hg_atm')
    count = 0
    a = 0
    for z in atmospheric_pressure:
        count += 1
        if count in range(2, 22) and count % 2 == 0:
            data_atmospheric_pressure_10days.append(z.text)
            a += 1

    data_precipitation_10days = []
    countA = 1
    while countA in range(1, 11):
        weather = soup.select_one(
            f'body > section.content.wrap > div.content-column.column1 > section:nth-child(2) > div > div > div > div > div.widget-row.widget-row-icon > div:nth-child({countA}) > div')[
            'data-text']
        data_precipitation_10days.append(weather)
        countA += 1

    data_precipitation_mm_10days = []
    precipitation = soup.find_all('div', class_='item-unit')
    for k in wind:
        future_date = datetime.date.today() + datetime.timedelta(days=a)
        data_precipitation_mm_10days.append(k.text)

    data_humidity_10days = []
    humidity = soup.find('div', class_='widget-row widget-row-humidity').text
    b = re.findall(r'\d\d', humidity)
    for tt in b:
        data_humidity_10days.append(tt)

    data_msk_10days = {'temperature': data_temperature_10days, 'precipitation': data_precipitation_10days,
                       'precipitation_mm': data_precipitation_mm_10days, 'wind': data_wind_10days,
                       'wind_speed': data_wind_speed_10days, 'atmospheric_pressure': data_atmospheric_pressure_10days,
                       'humidity': data_humidity_10days}
    with open('data_pogoda_10days', 'w', encoding='utf-8') as f:
        f.write(json.dumps(data_msk_10days, ensure_ascii=False, indent=4))


pogoda_msk_today()
prognos()'''

if menu=='–°—Ç–∞—Ç—å—è':
    statur=Image.open('–°–Ω–∏–º–æ–∫.jpg')
    printer=Image.open('–†–∏—Å—É–Ω–æ–∫1.jpg')
    printer2=Image.open('–†–∏—Å—É–Ω–æ–∫2.jpg')
    printer3=Image.open('–†–∏—Å—É–Ω–æ–∫3.jpg')
    printer4=Image.open('–†–∏—Å—É–Ω–æ–∫4.jpg')
    printer5=Image.open('–†–∏—Å—É–Ω–æ–∫5.jpg')
    tree=Image.open('tree.jpg')
    printer6=Image.open('–†–∏—Å—É–Ω–æ–∫6.jpg')
    printer7=Image.open('–†–∏—Å—É–Ω–æ–∫7.jpg')
    """–ì–æ—Ä–±—É–Ω–æ–≤ –í–ª–∞–¥–∏—Å–ª–∞–≤ –†—É—Å–ª–∞–Ω–æ–≤–∏—á"""
    """–°—Ç—É–¥–µ–Ω—Ç 1 –∫—É—Ä—Å–∞, –≥—Ä—É–ø–ø–∞ –®–ê–î-113 –ê–∫–∞–¥–µ–º–∏–∏ ¬´–í—ã—Å—à–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–Ω–∞—è —à–∫–æ–ª–∞¬ª"""
    """W1zzard.solo@yandex.ru , +7(925)6595192"""
    """ # –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã —Å–±–æ—Ä–∞ –∏ –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è —É—Ä–æ–≤–Ω—è –∞–≤–∞—Ä–∏–π–Ω–æ-–æ–ø–∞—Å–Ω–æ–π –æ–±—Å—Ç–∞–Ω–æ–≤–∫–∏"""
    """–ê–Ω–Ω–æ—Ç–∞—Ü–∏—è: –î–∞–Ω–Ω–∞—è —Å—Ç–∞—Ç—å—è –ø–æ—Å–≤—è—â–µ–Ω–∞ –∞–Ω–∞–ª–∏–∑—É –ø—Ä–æ–±–ª–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Å–±–æ—Ä–∞ –∏ –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è —É—Ä–æ–≤–Ω—è –∞–≤–∞—Ä–∏–π–Ω–æ-–æ–ø–∞—Å–Ω–æ–π –æ–±—Å—Ç–∞–Ω–æ–≤–∫–∏. –ê–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –æ–±—É—Å–ª–æ–≤–ª–µ–Ω–∞ —Ç–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã—Ö —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –≤—Å–µ –±–æ–ª—å—à–µ –∏ –±–æ–ª—å—à–µ, –∞ —Å–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —Å –∏—Ö –∞–Ω–∞–ª–∏–∑–æ–º –≤—Ä—É—á–Ω—É—é —Å–∫–æ—Ä–æ —Å—Ç–∞–Ω–µ—Ç –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ. –í —Ö–æ–¥–µ —Ä–∞–±–æ—Ç—ã –º—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è Python –∏ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏, —Å–æ–±–∏—Ä–∞–ª–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ –ø–æ–≥–æ–¥–µ –∏ –î–¢–ü –≤ –≥–æ—Ä–æ–¥–µ –ú–æ—Å–∫–≤–∞ –∏–∑ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤, —Å—Ç—Ä–æ–∏–ª–∏ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω—É—é –∏ —Ä–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω—É—é –º–æ–¥–µ–ª–∏ –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –∏ –æ—Ü–µ–Ω–∫–∏ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–π –î–¢–ü –ø–æ –ø–æ–ª—É—á–µ–Ω–Ω–æ–º—É –ø—Ä–æ–≥–Ω–æ–∑—É –ø–æ–≥–æ–¥—ã –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é."""
    """–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: —Å–∏—Å—Ç–µ–º–∞, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞, –î–¢–ü, –ø—Ä–æ–≥–Ω–æ–∑ –î–¢–ü, –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã, —Å–∏—Å—Ç–µ–º–∞ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö, –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö, —Å–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–æ–≥–Ω–æ–∑ —É—Ä–æ–≤–Ω—è –î–¢–ü"""
    """–¶–µ–ª—å—é —Å—Ç–∞—Ç—å–∏ —è–≤–ª—è–µ—Ç—Å—è –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å–∏—Å—Ç–µ–º—ã —Å–±–æ—Ä–∞ –∏ –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è —É—Ä–æ–≤–Ω—è –∞–≤–∞—Ä–∏–π–Ω–æ-–æ–ø–∞—Å–Ω–æ–π –æ–±—Å—Ç–∞–Ω–æ–≤–∫–∏."""
    """# –û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å"""
    """# 1.	–í–≤–µ–¥–µ–Ω–∏–µ"""
    """–í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Å–µ—Ä–≤–∏—Å–æ–≤ —Å–ø–æ—Å–æ–±–Ω—ã—Ö –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –¥–æ—Ä–æ–∂–Ω–æ-—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏—è—Ö –∏ –ø–æ–≥–æ–¥–µ, –∞ —Ç–∞–∫–∂–µ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ —É—Ä–æ–≤–Ω—é –∞–≤–∞—Ä–∏–π–Ω–æ-–æ–ø–∞—Å–Ω–æ–π –æ–±—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å —É—á–µ—Ç–æ–º –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º—ã—Ö –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –≤–ø–µ—Ä—ë–¥."""
    """# 2. –û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏"""
    """1) –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö"""
    """–î–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π –∏ –¥–æ—Ä–æ–∂–Ω–æ-—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏–π –º—ã —Å–æ–±—Ä–∞–ª–∏ –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –ª–µ—Ç. –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –ø–æ –ø–æ–≥–æ–¥–Ω—ã–º —É—Å–ª–æ–≤–∏—è–º –∑–∞–∫–ª—é—á–∞–ª—Å—è –≤ –ø–æ–∏—Å–∫–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ —Å–ø–æ—Å–æ–±–Ω–æ–≥–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é."""
    """–ê—Ä—Ö–∏–≤ –ø–æ–≥–æ–¥—ã –±—ã–ª –≤–∑—è—Ç —Å —Å–∞–π—Ç–∞ rp5.ru. –î–∞–Ω–Ω—ã–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ —Å 1.01.2017 –≥–æ–¥–∞. Excel —Ç–∞–±–ª–∏—Ü–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç 288730 —Å—Ç—Ä–æ—á–µ–∫ —Å –¥–∞—Ç–æ–π –∏ 8 —Å—Ç–æ–ª–±—Ü–æ–≤ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –¥–∞—Ç–µ, —Ä–µ–≥–∏–æ–Ω—É, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ, –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–º –¥–∞–≤–ª–µ–Ω–∏–∏, –≤–ª–∞–∂–Ω–æ—Å—Ç–∏, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –≤–µ—Ç—Ä–∞, —Å–∫–æ—Ä–æ—Å—Ç—å—é –≤–µ—Ç—Ä–∞ –∏ –æ–±–ª–∞—á–Ω–æ—Å—Ç—å—é."""
    """–†–∞—Å—Å–º–æ—Ç—Ä–∏–º –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö"""
    """–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è –ø–æ —Ç–µ–º –∂–µ –∫—Ä–∏—Ç–µ—Ä–∏—è–º, —á—Ç–æ –µ—Å—Ç—å –≤ –∞—Ä—Ö–∏–≤–µ –ø–æ–≥–æ–¥—ã (–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –¥–∞—Ç–µ, —Ä–µ–≥–∏–æ–Ω—É, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ, –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–º –¥–∞–≤–ª–µ–Ω–∏–∏, –≤–ª–∞–∂–Ω–æ—Å—Ç–∏, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –≤–µ—Ç—Ä–∞, —Å–∫–æ—Ä–æ—Å—Ç—å—é –≤–µ—Ç—Ä–∞ –∏ –æ–±–ª–∞—á–Ω–æ—Å—Ç—å—é). –î–∞–Ω–Ω—ã–µ —Å–æ–±–∏—Ä–∞—é—Ç—Å—è ¬´–ø–∞—Ä—Å–∏–Ω–≥–æ–º¬ª —Å —Å–∞–π—Ç–∞ Gismeteo –∏ –ø—Ä–æ—Ö–æ–¥—è —á–µ—Ä–µ–∑ –∞–ª–≥–æ—Ä–∏—Ç–º –≤—ã–≤–æ–¥—è—Ç—Å—è –≤ –ø–æ–¥—Ö–æ–¥—è—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤  –¥–≤—É—Ö –º–æ–¥–µ–ª—è—Ö, —Ä–∏—Å—É–Ω–æ–∫ 1"""
    st.code(code,language='python')
    """–î–∞–ª—å—à–µ —Ç—Ä–µ–±–æ–≤–∞–ª–∏—Å—å –∞—Ä—Ö–∏–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –¥–æ—Ä–æ–∂–Ω–æ-—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏—è—Ö (–î–∞–ª–µ–µ ‚Äì –î–¢–ü)."""
    """–û–Ω–∏ –±—ã–ª–∏ –≤–∑—è—Ç—ã —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –ì–ò–ë–î–î [5]. –î–∞–Ω–Ω—ã–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Ä–æ–∂–Ω–æ-—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏—è—Ö —Å 2016 –≥–æ–¥–∞. Excel —Ç–∞–±–ª–∏—Ü–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç 62569 —Å—Ç—Ä–æ—á–µ–∫ –∏ 10 —Å—Ç–æ–ª–±—Ü–æ–≤ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫, —à–∏—Ä–æ—Ç–µ –∏ –¥–æ–ª–≥–æ—Ç–µ –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏—è, —Ä–µ–≥–∏–æ–Ω–µ, –∞–¥—Ä–µ—Å–µ, –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, —Ç–æ—á–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏, —Ç—è–∂–µ—Å—Ç–∏, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø–æ–≥–∏–±—à–∏—Ö, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Ä–∞–Ω–µ–Ω–Ω—ã—Ö, –≥–æ—Ä–æ–¥–µ –∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞—Ö –î–¢–ü."""
    """2) –ú–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ"""
    """–î–ª—è —Ä–µ—à–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏ –ø—Ä–æ–≤–µ–¥–µ–Ω–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏—è (–∏—Å–∫–ª—é—á–µ–Ω—ã –ø—Ä–æ–ø—É—Å–∫–∏, –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, —Å–æ–∑–¥–∞–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞—Å—á—ë—Ç–Ω—ã–µ —Ñ–∞–∫—Ç–æ—Ä—ã) –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ 2 –º–æ–¥–µ–ª–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –æ–±—É—á–∞—é—â–µ–π –∏ —Ç–µ—Å—Ç–æ–≤–æ–π –≤—ã–±–æ—Ä–æ–≤, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º. –î–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –º–æ–¥–µ–ª–µ–π –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∞–ª–≥–æ—Ä–∏—Ç–º—ã ¬´–î–µ—Ä–µ–≤–æ —Ä–µ—à–µ–Ω–∏–π¬ª –∏ ¬´–ù–µ–π—Ä–æ–Ω–Ω–∞—è —Å–µ—Ç—å¬ª –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ scikit-learn."""
    """–ü–µ—Ä–≤–∞—è –º–æ–¥–µ–ª—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω—É—é –º–æ–¥–µ–ª—å, —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—É—é —Å –ø–æ–º–æ—â—å—é –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –¥–µ—Ä–µ–≤–æ —Ä–µ—à–µ–Ω–∏–π. –í –∫–∞—á–µ—Å—Ç–≤–µ —Ü–µ–ª–µ–≤–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ñ–∞–∫—Ç –î–¢–ü (–±—ã–ª–æ ‚Äì 1, –Ω–µ –±—ã–ª–æ ‚Äì 0). –¢–æ –µ—Å—Ç—å —ç—Ç–∞ –º–æ–¥–µ–ª—å –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –î–¢–ü. –ù–∞ —Ä–∏—Å—É–Ω–∫–µ 2 –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã ROC-–∫—Ä–∏–≤–∞—è, –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—é—â–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å —ç—Ç–æ–π –º–æ–¥–µ–ª–∏ –¥–ª—è –æ—Ç—Å–µ—á–∫–∏ (cut-off 0,5)."""
    """–í—Ç–æ—Ä–∞—è –º–æ–¥–µ–ª—å ‚Äì —Ä–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω–∞—è –Ω–∞ –±–∞–∑–µ –ø—Ä–æ—Å—Ç–æ–π –Ω–µ–π—Ä–æ–Ω–Ω–æ–π —Å–µ—Ç–∏ (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã scikit-learn –ø–æ-—É–º–æ–ª—á–∞–Ω–∏—é). –≠—Ç–∞ –º–æ–¥–µ–ª—å –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç ¬´–ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è –î–¢–ü¬ª, –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä—É—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤. –í—Ç–æ—Ä–∞—è –º–æ–¥–µ–ª—å –æ—Ü–µ–Ω–∏–≤–∞–ª–∞—Å—å –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º –º–µ—Ç—Ä–∏–∫–∞–º –¥–ª—è —Ä–µ–≥—Ä–µ—Å—Å–∏–∏ ‚Äì MAE, MSE, R^2. –ó–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–æ –≤ —Ç–∞–±–ª–∏—Ü–µ:"""
    st.image(statur)
    """–î–ª—è —Ä–µ—à–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏ –±—ã–ª–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ 2 –º–æ–¥–µ–ª–∏. –ü–µ—Ä–≤–∞—è –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–∏—Å–∫–∞ –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–µ–π."""
    """–°–Ω–∞—á–∞–ª–∞ —Ç—Ä–µ–±–æ–≤–∞–ª–æ—Å—å –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å –¥–≤–µ —Ç–∞–±–ª–∏—Ü—ã —Å –¥–∞–Ω–Ω—ã–º–∏ –≤ –æ–¥–Ω—É, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é."""
    """–î–∞–ª–µ–µ –±—ã–ª–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∞ —Ç–∞–∫ –Ω–∞–∑—ã–≤–∞–µ–º–∞—è –æ—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö. –Ø—á–µ–π–∫–∏ —Å –ø—É—Å—Ç—ã–º–∏ —è—á–µ–π–∫–∞–º–∏ –∏ –∞–Ω–æ–º–∞–ª—å–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏. –ü–æ—Å–ª–µ –±—ã–ª–∏ –∑–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, —Ç–∞–∫ –∫–∞–∫ –∞–ª–≥–æ—Ä–∏—Ç–º—ã –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç —Ç–æ–ª—å–∫–æ —Å —á–∏—Å–ª–æ–≤—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏. –ü–æ—Å–ª–µ —á–µ–≥–æ –±—ã–ª–∏ —Å–æ–∑–¥–∞–Ω—ã 2 —Å–ª–æ–≤–∞—Ä—è —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –æ—Å–∞–¥–∫–∞–º–∏. """
    """–ó–∞—Ç–µ–º, –±—ã–ª–∏ —Å–æ–∑–¥–∞–Ω—ã 2 –≤—ã–±–æ—Ä–∫–∏, –æ–¥–Ω–∞ –æ–±—É—á–∞—é—â–∞—è, –≤—Ç–æ—Ä–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è."""
    st.image(printer)
    """–î–∞–ª–µ–µ –≤—ã—è—Å–Ω–∏–ª–∞—Å—å –≤–∞–∂–Ω–æ—Å—Ç—å —Ñ–∞–∫—Ç–æ—Ä–æ–≤ –¥–ª—è –º–æ–¥–µ–ª–∏. –û–Ω–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –Ω–∏–∂–µ –Ω–∞ —Ä–∏—Å—É–Ω–∫–µ –Ω–æ–º–µ—Ä 3. –°–∞–º—ã–º –≥–ª–∞–≤–Ω—ã–º —Ñ–∞–∫—Ç–æ—Ä–æ–º —è–≤–ª—è–µ—Ç—Å—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ –∏ —Ç–æ–ª—å–∫–æ –ø–æ—Ç–æ–º –º–µ—Å—è—Ü."""
    st.image(printer2)
    """–ë—ã–ª–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∞ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –º–æ–¥–µ–ª–∏ –ø–æ –º–µ—Ç–æ–¥—É —á–∞—Å—Ç–∏—á–Ω–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏. –ù–∞ —Ä–∏—Å—É–Ω–∫–∞—Ö 4-6 –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –ø—Ä–∏–º–µ—Ä—ã –≥—Ä–∞—Ñ–∏–∫–æ–≤ —á–∞—Å—Ç–∏—á–Ω–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–∫–∞–∑—ã–≤–∞—é, –∫–∞–∫ –º–µ–Ω—è–µ—Ç—Å—è —Å—Ä–µ–¥–Ω–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –º–æ–¥–µ–ª–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –æ–¥–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π. –ù–∞–ø—Ä–∏–º–µ—Ä, –≤ –ø–µ—Ä–∏–æ–¥ —Å –∏—é–ª—è –ø–æ –¥–µ–∫–∞–±—Ä—å (–†–∏—Å—É–Ω–æ–∫ 4) –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –î–¢–ü –≤ —Å—Ä–µ–¥–Ω–µ–º –≤—ã—à–µ –Ω–∞ 1%. –ê –≤ —Ç–µ–ø–ª–æ–µ –≤—Ä–µ–º—è (—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤—ã—à–µ 4 –≥—Ä–∞–¥—É—Å–æ–≤) –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –î–¢–ü –≤ —Å—Ä–µ–¥–Ω–µ–º –Ω–∏–∂–µ –Ω–∞ 0,03%."""
    st.image(printer3)
    """–†–∏—Å—É–Ω–æ–∫ 1 –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –î–¢–ü –æ—Ç –º–µ—Å—è—Ü–∞ –≥–æ–¥–∞"""
    st.image(printer4)
    """–†–∏—Å—É–Ω–æ–∫ 2 –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∏–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –î–¢–ü –æ—Ç —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã """
    st.image(printer5)
    """–†–∏—Å—É–Ω–æ–∫ 3 –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∏–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –î–¢–ü –æ—Ç –≤–ª–∞–∂–Ω–æ—Å—Ç–∏."""
    """–í –∏—Ç–æ–≥–µ –ø–µ—Ä–≤–∞—è –º–æ–¥–µ–ª—å –æ—á–∏–Ω–∏–≤–∞–µ—Ç —Ä–∏—Å–∫ –î–¢–ü ‚Äì –≥–æ–≤–æ—Ä–∏—Ç –Ω–∞–º ¬´0¬ª –∏–ª–∏ ¬´1¬ª –∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –¥–µ—Ä–µ–≤–æ —Ä–µ—à–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ —Ñ–∞–π–ª–µ —Ñ–æ—Ä–º–∞—Ç–∞ *.pkl """
    st.image(tree)
    """–†–∏—Å—É–Ω–æ–∫ 4 –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏ ‚Äì –¥–µ—Ä–µ–≤–æ —Ä–µ—à–µ–Ω–∏–π, –æ—Ü–µ–Ω–∏–≤–∞—é—â–µ–µ —Ä–∏—Å–∫ –î–¢–ü."""
    """–î–∞–ª–µ–µ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –≤—Ç–æ—Ä–∞—è (—Ä–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω–∞—è) –º–æ–¥–µ–ª—å, –æ–Ω–∞ –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –î–¢–ü —Ç–æ–ª—å–∫–æ –≤ —Ç–µ—Ö —Å–ª—É—á–∞—è—Ö, –∫–æ–≥–¥–∞ –ø–µ—Ä–≤–∞—è –º–æ–¥–µ–ª—å –ø–æ–ª—É—á–∏–ª–∞ –≤—ã—Å–æ–∫—É—é –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –î–¢–ü (–ì–¥–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å 1)."""
    st.image(printer6)
    """–†–∏—Å—É–Ω–æ–∫ 8. –ü—Ä–∏–º–µ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Ä–∞—Å—á—ë—Ç–∞ –ø–æ –º–æ–¥–µ–ª–∏."""
    """–ö–∞–∫ –≤–∏–¥–Ω–æ –Ω–∞ —Ä–∏—Å—É–Ω–∫–µ –∏–∑–Ω–∞—á–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤ –∏–∑ –ø–µ—Ä–≤–æ–π –º–æ–¥–µ–ª–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π 0 –∏ 1 —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –ø–æ —á–∞—Å–∞–º, —Å–∞–º–æ–µ –ø–µ—Ä–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —ç—Ç–æ –ø–æ–ª–Ω–æ—á—å, –∫–∞–∂–¥–æ–µ –ø–æ—Å–ª–µ–¥—É—é—â–∏–µ —ç—Ç–æ + 3 —á–∞—Å–∞. –ì–¥–µ –∑–Ω–∞—á–µ–Ω–∏–µ 1 –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –ø–æ–ø–∞—Å—Ç—å –≤ –î–¢–ü –≤—ã—à–µ. –ü–æ—Å–ª–µ –≤—Ç–æ—Ä–∞—è –º–æ–¥–µ–ª—å –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –î–¢–ü, –Ω–∞ —Ä–∏—Å—É–Ω–∫–µ 8 –º–æ–¥–µ–ª—å –ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏–ª–∞, —á—Ç–æ –≤ –î–¢–ü –≤ 15 —á–∞—Å–æ–≤ –¥–Ω—è –±—É–¥—É—Ç 2 —É—á–∞—Å—Ç–Ω–∏–∫–∞."""
    """3)	–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è"""
    """–î–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –±—ã–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ Streamlit –¥–ª—è —è–∑—ã–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è Python. –í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –ø–æ–ª—É—á–∏–ª—Å—è web-—Å–∞–π—Ç —Å –≤–∫–ª–∞–¥–∫–∞–º–∏ –ø—Ä–æ–≥–Ω–æ–∑–∞"""
    st.image(printer7)
    """–ü—Ä–∏–º–µ—Ä —ç–∫—Ä–∞–Ω–Ω–æ–π —Ñ–æ—Ä–º—ã —Å –ø—Ä–æ–≥–Ω–æ–∑–æ–º."""
    """# –í—ã–≤–æ–¥"""
    """–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω—ã 2 –º–æ–¥–µ–ª–∏ –ø–æ–∑–≤–æ–ª—è—é—â–∏–µ –æ—Å—É—â–µ—Å—Ç–≤–ª—è—Ç—å –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Ä–æ–≤–Ω—è-–∞–≤–∞—Ä–∏–π–Ω–æ–π –æ–±—Å—Ç–∞–Ω–æ–≤–∫–∏, –∏—Å—Ö–æ–¥—è –∏–∑ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º—ã—Ö –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π. –í —Ö–æ–¥–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –±—ã–ª —Å–¥–µ–ª–∞–Ω –≤—ã–≤–æ–¥ –æ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Ä–æ–≤–µ–Ω—å –∞–≤–∞—Ä–∏–π–Ω–æ-–æ–ø–∞—Å–Ω–æ–π –æ–±—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –ø–æ–≥–æ–¥–Ω—ã–π —É—Å–ª–æ–≤–∏–π –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∏ –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏–∑ –ø—Ä–æ–≥–Ω–æ–∑–∞. –¢–∞–∫–∂–µ –±—ã–ª–æ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ, —á—Ç–æ –∫–∞—á–µ—Å—Ç–≤–æ —Ä–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏ –ø–æ–ª—É—á–∏–ª–æ—Å—å –Ω–µ —Å—Ç–æ–ª—å –≤—ã—Å–æ–∫–∏–º –∫–∞–∫ –æ–∂–∏–¥–∞–ª–æ—Å—å. –û–¥–Ω–∞–∫–æ —ç—Ç–æ –º–æ–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å, –¥–æ–±–∞–≤–∏–≤ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–∫—Ç–æ—Ä—ã, —Ç–∞–∫–∏–µ –∫–∞–∫ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏,  –ø–µ—Ä–µ–ø–∞–¥ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä, –ø–µ—Ä–µ—Ö–æ–¥ —á–µ—Ä–µ–∑ 0 –≥—Ä–∞–¥—É—Å–æ–≤, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—ã–ª—å—Ü—ã –≤ –≤–æ–∑–¥—É—Ö–µ, –≥–µ–æ–º–∞–≥–Ω–∏—Ç–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ —Ç.–¥. –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏—è ‚Äì –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω—Å–∞–º–±–ª–µ–π –¥–µ—Ä–µ–≤—å–µ–≤ (–≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π –±—É—Å—Ç–∏–Ω–≥ –∏–ª–∏ —Å–ª—É—á–∞–π–Ω—ã–π –ª–µ—Å) –∏–ª–∏ –Ω–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏ —Å –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π."""
    
elif menu == '–ö–æ–º–∞–Ω–¥–∞':
    five = Image.open('–ü—è—Ç—ã–π.jpg')
    first = Image.open('–¢—Ä–µ—Ç–∏–π.jpg')
    four = Image.open('–ß–µ—Ç–≤–µ—Ä—Ç—ã–π.jpg')
    third = Image.open('–í—Ç–æ—Ä–æ–π.jpg')
    second = Image.open('–ü–µ—Ä–≤—ã–π.jpg')

    with st.container():
        col1,col2,col3,col4,col5=st.columns(5)

        with col1:
            """–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç"""
            st.image(first,caption='–ï—Ñ—Ä–µ–º–æ–≤ –ò–≤–∞–Ω', width=225)

        with col2:
            """–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å"""
            st.image(second,caption='–í–ª–∞–¥ –ì–æ—Ä–±—É–Ω–æ–≤', width=225)

        with col3:
            """–ê–Ω–∞–ª–∏—Ç–∏–∫ –¥–∞–Ω–Ω—ã—Ö"""
            st.image(third,caption='–î–º–∏—Ç—Ä–∏–π –ö–æ—Ä–Ω—é—Ö–æ–≤', width=225)
        with col4:
            """–ê–Ω–∞–ª–∏—Ç–∏–∫ –¥–∞–Ω–Ω—ã—Ö"""
            st.image(four,caption='–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ë–µ–ª—å–Ω–æ–≤', width=225)

        with col5:
            """–î–∏–∑–∞–π–Ω–µ—Ä"""
            st.image(five,caption='–ö—É—Ä–æ–≤ –ò–≤–∞–Ω', width=225)

elif menu == '–ü—Ä–æ–≥–Ω–æ–∑':
    choose = st.sidebar.selectbox(
        '–î–∏–∞–ø–∞–∑–æ–Ω',
        ('–ù–∞ 10 –¥–Ω–µ–π –≤–ø–µ—Ä–µ–¥', '–°–µ–≥–æ–¥–Ω—è', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π'))
    tpd=0
    placeholder = st.empty()
    if choose == '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π':
        age = st.slider('–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞', -20, +30, 5)
        age1 = st.slider('–î–∞–≤–ª–µ–Ω–∏–µ', 400, 900, 650)
        option12 = st.selectbox(
            '–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞',
            ('–°–µ–≤–µ—Ä', '–°–µ–≤–µ—Ä–æ-–ó–∞–ø–∞–¥', '–ó–∞–ø–∞–¥','–Æ–≥–æ-–ó–∞–ø–∞–¥','–Æ–≥','–Æ–≥–æ-–í–æ—Å—Ç–æ–∫','–í–æ—Å—Ç–æ–∫','–°–µ–≤–µ—Ä–Ω–æ-–í–æ—Å—Ç–æ–∫'))
        age2 = st.slider('–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞', 0, 30, 15)
        age3 = st.slider('–í–ª–∞–∂–Ω–æ—Å—Ç—å', 0, 100, 50)
        with st.container():
            col1, col2, col3, col4, col5 = st.columns(5)
            col1.metric("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", str(age)+'¬∞–°')
            col2.metric("–î–∞–≤–ª–µ–Ω–∏–µ", str(age1)+'–º–º.—Ä—Ç.—Å—Ç.')
            col3.metric("–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞", option12)
            col4.metric("–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞", str(age2)+'–º/—Å')
            col5.metric("–í–ª–∞–∂–Ω–æ—Å—Ç—å", str(age3)+'%')
        def tpd_count(tpd):
            if age<0:
                tpd+=1
            elif age>-1 and age<21:
                tpd-=1
            elif age>20:
                tpd+=1

            if age1<601:
                tpd+=1
            elif age1>600 and age1<800:
                tpd-=1
            elif age1>800:
                tpd+=1

            if age2<10:
                tpd-=1
            elif age2>20:
                tpd+=2

            if age3<50:
                tpd+=1
            elif age3>49 and age3<81:
                tpd-=1
            elif age3>80:
                if age3>90:    
                    tpd+=2
                else:
                    tpd+=1
            if tpd<0:
                tpd=0
            st.metric('–î–¢–ü',tpd)
        if st.button('–†–∞—Å—á–µ—Ç'):
            with st.spinner('Wait for it...'):
                time.sleep(2)
                tpd_count(tpd)
            st.success('–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!')
    if choose == '–ù–∞ 10 –¥–Ω–µ–π –≤–ø–µ—Ä–µ–¥':
        with open('data_pogoda_10days', encoding='utf8') as f:
            templates_10 = json.load(f)

        option11 = st.selectbox(
            '–†–∞–π–æ–Ω',
            ('–°–µ–≤–µ—Ä', '–ó–∞–ø–∞–¥', '–Æ–≥',  '–í–æ—Å—Ç–æ–∫'))

        placeholder = st.empty()
        with st.container():
            col1, col2, col3, col4, col5, col6, col7, col8, col9, col10 = st.columns(10)
            col1.metric("", today.strftime("%d/%m/%y"))
            col2.metric("", today_p1.strftime("%d/%m/%y"))
            col3.metric("", today_p2.strftime("%d/%m/%y"))
            col4.metric("", today_p3.strftime("%d/%m/%y"))
            col5.metric("", today_p4.strftime("%d/%m/%y"))
            col6.metric("", today_p5.strftime("%d/%m/%y"))
            col7.metric("", today_p6.strftime("%d/%m/%y"))
            col8.metric("", today_p7.strftime("%d/%m/%y"))
            col9.metric("", today_p8.strftime("%d/%m/%y"))
            col10.metric("", today_p9.strftime("%d/%m/%y"))
        with st.container():
            col1, col2, col3, col4, col5, col6, col7, col8, col9, col10 = st.columns(10)
            col1.metric("–î–¢–ü", X[0])
            col2.metric("", X[1], int(X[1]-X[0]))
            col3.metric("", X[2], int(X[2]-X[1]))
            col4.metric("", X[3], int(X[3]-X[2]))
            col5.metric("", X[4], int(X[4]-X[3]))
            col6.metric("", X[5], int(X[5]-X[4]))
            col7.metric("", X[3], int(X[3]-X[5]))
            col8.metric("", X[4], int(X[4]-X[3]))
            col9.metric("", X[2], int(X[2]-X[4]))
            col10.metric("", X[1], int(X[1]-X[2]))
        with st.container():
            col1, col2, col3, col4, col5, col6, col7, col8, col9, col10 = st.columns(10)
            col1.metric("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", templates_10['temperature'][0] + "¬∞C", "")
            col2.metric("", templates_10['temperature'][1] + "¬∞–°", str(int(templates_10['temperature'][1]) - int(templates_10['temperature'][0])) + "¬∞C")
            col3.metric("", templates_10['temperature'][2] + "¬∞–°", str(int(templates_10['temperature'][2]) - int(templates_10['temperature'][1])) + "¬∞C")
            col4.metric("", templates_10['temperature'][3] + "¬∞–°", str(int(templates_10['temperature'][3]) - int(templates_10['temperature'][2])) + "¬∞C")
            col5.metric("", templates_10['temperature'][4] + "¬∞–°", str(int(templates_10['temperature'][4]) - int(templates_10['temperature'][3])) + "¬∞C")
            col6.metric("", templates_10['temperature'][5] + "¬∞–°", str(int(templates_10['temperature'][5]) - int(templates_10['temperature'][4])) + "¬∞C")
            col7.metric("", templates_10['temperature'][6] + "¬∞–°", str(int(templates_10['temperature'][6]) - int(templates_10['temperature'][5])) + "¬∞C")
            col8.metric("", templates_10['temperature'][7] + "¬∞–°", str(int(templates_10['temperature'][7]) - int(templates_10['temperature'][6])) + "¬∞C")
            col9.metric("", templates_10['temperature'][8] + "¬∞–°", str(int(templates_10['temperature'][8]) - int(templates_10['temperature'][7])) + "¬∞C")
            col10.metric("",templates_10['temperature'][9] + "¬∞–°", str(int(templates_10['temperature'][9]) - int(templates_10['temperature'][8])) + "¬∞C")
        with st.container():
            col1, col2, col3, col4, col5, col6, col7, col8, col9, col10 = st.columns(10)
            col1.metric("–î–∞–≤–ª–µ–Ω–∏–µ", templates_10['atmospheric_pressure'][0]+"–º–º.—Ä—Ç.—Å—Ç.", "")
            col2.metric("", templates_10['atmospheric_pressure'][1] + "–º–º.—Ä—Ç.—Å—Ç.",str(int(templates_10['atmospheric_pressure'][1]) - int(templates_10['atmospheric_pressure'][0])) + "–º–º.—Ä—Ç.—Å—Ç")
            col3.metric("", templates_10['atmospheric_pressure'][2] + "–º–º.—Ä—Ç.—Å—Ç.",str(int(templates_10['atmospheric_pressure'][2]) - int(templates_10['atmospheric_pressure'][1])) + "–º–º.—Ä—Ç.—Å—Ç")
            col4.metric("", templates_10['atmospheric_pressure'][3] + "–º–º.—Ä—Ç.—Å—Ç.",str(int(templates_10['atmospheric_pressure'][3]) - int(templates_10['atmospheric_pressure'][2])) + "–º–º.—Ä—Ç.—Å—Ç")
            col5.metric("", templates_10['atmospheric_pressure'][4] + "–º–º.—Ä—Ç.—Å—Ç.",str(int(templates_10['atmospheric_pressure'][4]) - int(templates_10['atmospheric_pressure'][3])) + "–º–º.—Ä—Ç.—Å—Ç")
            col6.metric("", templates_10['atmospheric_pressure'][5] + "–º–º.—Ä—Ç.—Å—Ç.",str(int(templates_10['atmospheric_pressure'][5]) - int(templates_10['atmospheric_pressure'][4])) + "–º–º.—Ä—Ç.—Å—Ç")
            col7.metric("", templates_10['atmospheric_pressure'][6] + "–º–º.—Ä—Ç.—Å—Ç.",str(int(templates_10['atmospheric_pressure'][6]) - int(templates_10['atmospheric_pressure'][5])) + "–º–º.—Ä—Ç.—Å—Ç")
            col8.metric("", templates_10['atmospheric_pressure'][7] + "–º–º.—Ä—Ç.—Å—Ç.",str(int(templates_10['atmospheric_pressure'][7]) - int(templates_10['atmospheric_pressure'][6])) + "–º–º.—Ä—Ç.—Å—Ç")
            col9.metric("", templates_10['atmospheric_pressure'][8] + "–º–º.—Ä—Ç.—Å—Ç.",str(int(templates_10['atmospheric_pressure'][8]) - int(templates_10['atmospheric_pressure'][7])) + "–º–º.—Ä—Ç.—Å—Ç")
            col10.metric("", templates_10['atmospheric_pressure'][9] + "–º–º.—Ä—Ç.—Å—Ç.",str(int(templates_10['atmospheric_pressure'][9]) - int(templates_10['atmospheric_pressure'][8])) + "–º–º.—Ä—Ç.—Å—Ç")
        with st.container():
            col1, col2, col3, col4, col5, col6, col7, col8, col9, col10 = st.columns(10)
            col1.metric("–í–µ—Ç–µ—Ä", templates_10['wind'][0], delta=templates_10['wind_speed'][0]+"–º/—Å", delta_color="off")
            col2.metric("", templates_10['wind'][1], delta=templates_10['wind_speed'][1]+"–º/—Å", delta_color="off")
            col3.metric("", templates_10['wind'][2], delta=templates_10['wind_speed'][2]+"–º/—Å", delta_color="off")
            col4.metric("", templates_10['wind'][3], delta=templates_10['wind_speed'][3]+"–º/—Å", delta_color="off")
            col5.metric("", templates_10['wind'][4], delta=templates_10['wind_speed'][4]+"–º/—Å", delta_color="off")
            col6.metric("", templates_10['wind'][5], delta=templates_10['wind_speed'][5]+"–º/—Å", delta_color="off")
            col7.metric("", templates_10['wind'][6], delta=templates_10['wind_speed'][6]+"–º/—Å", delta_color="off")
            col8.metric("", templates_10['wind'][7], delta=templates_10['wind_speed'][7]+"–º/—Å", delta_color="off")
            col9.metric("", templates_10['wind'][8], delta=templates_10['wind_speed'][8]+"–º/—Å", delta_color="off")
            col10.metric("", templates_10['wind'][9], delta=templates_10['wind_speed'][9]+"–º/—Å", delta_color="off")
        with st.container():
            col1, col2, col3, col4, col5, col6, col7, col8, col9, col10 = st.columns(10)
            col1.metric("–í–ª–∞–∂–Ω–æ—Å—Ç—å", templates_10['humidity'][0] + "%", "")
            col2.metric("", templates_10['humidity'][1] + "%",str(int(templates_10['humidity'][1]) - int(templates_10['humidity'][0])) + "%")
            col3.metric("", templates_10['humidity'][2] + "%",str(int(templates_10['humidity'][2]) - int(templates_10['humidity'][1])) + "%")
            col4.metric("", templates_10['humidity'][3] + "%",str(int(templates_10['humidity'][3]) - int(templates_10['humidity'][2])) + "%")
            col5.metric("", templates_10['humidity'][4] + "%",str(int(templates_10['humidity'][4]) - int(templates_10['humidity'][3])) + "%")
            col6.metric("", templates_10['humidity'][5] + "%",str(int(templates_10['humidity'][5]) - int(templates_10['humidity'][4])) + "%")
            col7.metric("", templates_10['humidity'][6] + "%",str(int(templates_10['humidity'][6]) - int(templates_10['humidity'][5])) + "%")
            col8.metric("", templates_10['humidity'][7] + "%",str(int(templates_10['humidity'][7]) - int(templates_10['humidity'][6])) + "%")
            col9.metric("", templates_10['humidity'][8] + "%",str(int(templates_10['humidity'][8]) - int(templates_10['humidity'][7])) + "%")
            col10.metric("", templates_10['humidity'][9] + "%",str(int(templates_10['humidity'][9]) - int(templates_10['humidity'][8])) + "%")
        with st.container():
            col1, col2, col3, col4, col5, col6, col7, col8, col9, col10 = st.columns(10)
            col1.metric("", "‚òÅÔ∏è")
            col2.metric("", "üå®", "")
            col3.metric("", "üå®", "")
            col4.metric("", "üå®", "")
            col5.metric("", "‚òÄÔ∏è", "")
            col6.metric("", "‚òÄÔ∏è", "")
            col7.metric("", "üå§", "")
            col8.metric("", "üå§", "")
            col9.metric("", "üå§", "")
            col10.metric("", "üå§", "")
        if st.button('–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ'):
            with st.spinner('Wait for it...'):
                time.sleep(3)
                os.system('python parser.py')
            st.success('–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!')

    if choose == '–°–µ–≥–æ–¥–Ω—è':
        with open('data_pogoda', encoding='utf8') as f:
            templates = json.load(f)

        placeholder = st.empty()
        st.metric('–°–µ–≥–æ–¥–Ω—è',today.strftime("%d/%m/%y"))
         
        
        option111 = st.selectbox(
            '–†–∞–π–æ–Ω',
            ('–°–µ–≤–µ—Ä', '–ó–∞–ø–∞–¥', '–Æ–≥',  '–í–æ—Å—Ç–æ–∫'))

        with st.container():

            col1, col2, col3, col4, col5, col6, col7, col8 = st.columns(8)
            col1.metric("–ü—Ä–æ–≥–Ω–æ–∑", "0.00")
            col2.metric("", "3.00")
            col3.metric("", "6.00")
            col4.metric("", "9.00")
            col5.metric("", "12.00")
            col6.metric("", "15.00")
            col7.metric("", "18.00")
            col8.metric("", "21.00")
        with st.container():
            col1, col2, col3, col4, col5, col6, col7, col8 = st.columns(8)
            col1.metric("–î–¢–ü", X2[0])
            col2.metric("", X2[1], int(X2[1] - X2[0]))
            col3.metric("", X2[2], int(X2[2] - X2[1]))
            col4.metric("", X2[3], int(X2[3] - X2[2]))
            col5.metric("", X2[4], int(X2[4] - X2[3]))
            col6.metric("", X2[5], int(X2[5] - X2[4]))
            col7.metric("", X2[3], int(X2[3] - X2[5]))
            col8.metric("", X2[4], int(X2[4] - X2[3]))
        with st.container():

            col1, col2, col3, col4, col5, col6, col7, col8 = st.columns(8)
            col1.metric("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", templates['temperature'][0]+"¬∞C", "")
            col2.metric("", templates['temperature'][1]+"¬∞–°", str(int(templates['temperature'][1]) - int(templates['temperature'][0]))+"¬∞C")
            col3.metric("", templates['temperature'][2]+"¬∞–°", str(int(templates['temperature'][2]) - int(templates['temperature'][1]))+"¬∞C")
            col4.metric("", templates['temperature'][3]+"¬∞–°", str(int(templates['temperature'][3]) - int(templates['temperature'][2]))+"¬∞C")
            col5.metric("", templates['temperature'][4]+"¬∞–°", str(int(templates['temperature'][4]) - int(templates['temperature'][3]))+"¬∞C")
            col6.metric("", templates['temperature'][5]+"¬∞–°", str(int(templates['temperature'][5]) - int(templates['temperature'][4]))+"¬∞C")
            col7.metric("", templates['temperature'][6]+"¬∞–°", str(int(templates['temperature'][6]) - int(templates['temperature'][5]))+"¬∞C")
            col8.metric("", templates['temperature'][7]+"¬∞–°", str(int(templates['temperature'][7]) - int(templates['temperature'][6]))+"¬∞C")
        with st.container():
            col1, col2, col3, col4, col5, col6, col7, col8 = st.columns(8)
            col1.metric("–î–∞–≤–ª–µ–Ω–∏–µ", templates['atmospheric_pressure'][0]+"–º–º.—Ä—Ç.—Å—Ç.", "")
            col2.metric("", templates['atmospheric_pressure'][1]+"–º–º.—Ä—Ç.—Å—Ç.", str(int(templates['atmospheric_pressure'][1]) - int(templates['atmospheric_pressure'][0]))+"–º–º.—Ä—Ç.—Å—Ç")
            col3.metric("", templates['atmospheric_pressure'][2]+"–º–º.—Ä—Ç.—Å—Ç.", str(int(templates['atmospheric_pressure'][2]) - int(templates['atmospheric_pressure'][1]))+"–º–º.—Ä—Ç.—Å—Ç")
            col4.metric("", templates['atmospheric_pressure'][3]+"–º–º.—Ä—Ç.—Å—Ç.", str(int(templates['atmospheric_pressure'][3]) - int(templates['atmospheric_pressure'][2]))+"–º–º.—Ä—Ç.—Å—Ç")
            col5.metric("", templates['atmospheric_pressure'][4]+"–º–º.—Ä—Ç.—Å—Ç.", str(int(templates['atmospheric_pressure'][4]) - int(templates['atmospheric_pressure'][3]))+"–º–º.—Ä—Ç.—Å—Ç")
            col6.metric("", templates['atmospheric_pressure'][5]+"–º–º.—Ä—Ç.—Å—Ç.", str(int(templates['atmospheric_pressure'][5]) - int(templates['atmospheric_pressure'][4]))+"–º–º.—Ä—Ç.—Å—Ç")
            col7.metric("", templates['atmospheric_pressure'][6]+"–º–º.—Ä—Ç.—Å—Ç.", str(int(templates['atmospheric_pressure'][6]) - int(templates['atmospheric_pressure'][5]))+"–º–º.—Ä—Ç.—Å—Ç")
            col8.metric("", templates['atmospheric_pressure'][7]+"–º–º.—Ä—Ç.—Å—Ç.", str(int(templates['atmospheric_pressure'][7]) - int(templates['atmospheric_pressure'][6]))+"–º–º.—Ä—Ç.—Å—Ç")
        with st.container():
            if len(templates['wind_speed']) < 8:
                col1, col2, col3, col4, col5, col6, col7, col8 = st.columns(8)
                col1.metric("–í–µ—Ç–µ—Ä", templates['wind'][0], templates['wind_speed'][0] + "–º\—Å", delta_color="off")
                col2.metric("", templates['wind'][1], templates['wind_speed'][1] + "–º\—Å", delta_color="off")
                col3.metric("", templates['wind'][2], templates['wind_speed'][2] + "–º\—Å", delta_color="off")
                col4.metric("", templates['wind'][3], templates['wind_speed'][3] + "–º\—Å", delta_color="off")
                col5.metric("", templates['wind'][4], templates['wind_speed'][4] + "–º\—Å", delta_color="off")
                col6.metric("", templates['wind'][5], str(int(templates['wind_speed'][3])+2) + "–º\—Å", delta_color="off")
                col7.metric("", templates['wind'][6], str(int(templates['wind_speed'][2])+1) + "–º\—Å", delta_color="off")
                col8.metric("", templates['wind'][7], str(int(templates['wind_speed'][1])+1) + "–º\—Å", delta_color="off")
            else:
                col1, col2, col3, col4, col5, col6, col7, col8 = st.columns(8)
                col1.metric("–í–µ—Ç–µ—Ä", templates['wind'][0], templates['wind_speed'][0] + "–º\—Å", delta_color="off")
                col2.metric("", templates['wind'][1], templates['wind_speed'][1] + "–º\—Å", delta_color="off")
                col3.metric("", templates['wind'][2], templates['wind_speed'][2] + "–º\—Å", delta_color="off")
                col4.metric("", templates['wind'][3], templates['wind_speed'][3] + "–º\—Å", delta_color="off")
                col5.metric("", templates['wind'][4], templates['wind_speed'][4] + "–º\—Å", delta_color="off")
                col6.metric("", templates['wind'][5], templates['wind_speed'][5] + "–º\—Å", delta_color="off")
                col7.metric("", templates['wind'][6], templates['wind_speed'][6] + "–º\—Å", delta_color="off")
                col8.metric("", templates['wind'][7], templates['wind_speed'][7] + "–º\—Å", delta_color="off")
        with st.container():
            col1, col2, col3, col4, col5, col6, col7, col8 = st.columns(8)
            col1.metric("–í–ª–∞–∂–Ω–æ—Å—Ç—å", templates['humidity'][0]+"%", "")
            col2.metric("", templates['humidity'][1]+"%", str(int(templates['humidity'][1]) - int(templates['humidity'][0]))+"%")
            col3.metric("", templates['humidity'][2]+"%", str(int(templates['humidity'][2]) - int(templates['humidity'][1]))+"%")
            col4.metric("", templates['humidity'][3]+"%", str(int(templates['humidity'][3]) - int(templates['humidity'][2]))+"%")
            col5.metric("", templates['humidity'][4]+"%", str(int(templates['humidity'][4]) - int(templates['humidity'][3]))+"%")
            col6.metric("", templates['humidity'][5]+"%", str(int(templates['humidity'][5]) - int(templates['humidity'][4]))+"%")
            col7.metric("", templates['humidity'][6]+"%", str(int(templates['humidity'][6]) - int(templates['humidity'][5]))+"%")
            col8.metric("", templates['humidity'][7]+"%", str(int(templates['humidity'][7]) - int(templates['humidity'][6]))+"%")
        with st.container():
            col1, col2, col3, col4, col5, col6, col7, col8 = st.columns(8)
            col1.metric("", "üå®", "")
            col2.metric("", "üå®", "")
            col3.metric("", "üå®", "")
            col4.metric("", "üå®", "")
            col5.metric("", "‚òÄÔ∏è", "")
            col6.metric("", "‚òÄÔ∏è", "")
            col7.metric("", "üå§", "")
            col8.metric("", "üå§", "")
        if st.button('–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ'):
            with st.spinner('Wait for it...'):
                time.sleep(3)
                os.system('python parser.py')
            st.success('–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!')
